from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.state import State, StatesGroup
from db.crud import create_or_update_user

router = Router()


class InitProfileState(StatesGroup):
    location = State()
    department = State()
    position = State()
    hobbies = State()
    photo = State()
    confirm = State()


START_TEXT = (
    "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –∏–∑ —Ä–∞–∑–Ω—ã—Ö —É–≥–æ–ª–∫–æ–≤ –º–∏—Ä–∞!üåé\n"
    "–†–∞—Å—Å–∫–∞–∂–∏, –≥–¥–µ —Ç—ã —Å–µ–π—á–∞—Å ‚Äì –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å –≥–µ–æ–≥—Ä–∞—Ñ–∏—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã."
)


@router.callback_query(F.data == "setup_profile")
async def handle_setup_profile(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.answer(
        "–î–∞–≤–∞–π –æ—Ñ–æ—Ä–º–∏–º —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!\n"
        "–í–æ—Ç –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–±–µ, –∫–æ—Ç–æ—Ä—É—é —è –Ω–∞—à–µ–ª")
    await callback.message.answer(
        f"{callback.from_user.full_name}\n"
        f"@{callback.from_user.username}\n\n")
    await callback.message.answer(START_TEXT)
    await state.set_state(InitProfileState.location)


@router.message(InitProfileState.location)
async def enter_location(message: Message, state: FSMContext):
    await state.update_data(location=message.text)
    await message.answer(
        "–î–æ–±–∞–≤–∏–º –Ω–µ–º–Ω–æ–≥–æ –¥–µ—Ç–∞–ª–µ–π!‚ú®\n"
        "–ù–∞–ø–∏—à–∏ –ø–∞—Ä—É —Å–ª–æ–≤ –æ —Å–µ–±–µ: —á–µ–º —É–≤–ª–µ–∫–∞–µ—à—å—Å—è, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, "
        "–º–æ–∂–µ—Ç, —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ–æ–±—ã—á–Ω–æ–µ —Ö–æ–±–±–∏? "
        "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–≤–æ–∏–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞–º –Ω–∞–π—Ç–∏ —Å —Ç–æ–±–æ–π –æ–±—â–∏–µ —Ç–µ–º—ã!")
    await message.answer("–í –∫–∞–∫–æ–º –æ—Ç–¥–µ–ª–µ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å?")
    await state.set_state(InitProfileState.department)


@router.message(InitProfileState.department)
async def enter_department(message: Message, state: FSMContext):
    await state.update_data(department=message.text)
    await message.answer("–ê –Ω–∞ –∫–∞–∫–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏?")
    await state.set_state(InitProfileState.position)


@router.message(InitProfileState.position)
async def enter_position(message: Message, state: FSMContext):
    await state.update_data(position=message.text)
    await message.answer(
        "–î–æ–±–∞–≤–∏–º –Ω–µ–º–Ω–æ–≥–æ –¥–µ—Ç–∞–ª–µ–π!‚ú®\n"
        "–ù–∞–ø–∏—à–∏ –ø–∞—Ä—É —Å–ª–æ–≤ –æ —Å–µ–±–µ: —á–µ–º —É–≤–ª–µ–∫–∞–µ—à—å—Å—è, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, "
        "–º–æ–∂–µ—Ç, —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ–æ–±—ã—á–Ω–æ–µ —Ö–æ–±–±–∏? "
        "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–≤–æ–∏–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞–º –Ω–∞–π—Ç–∏ —Å —Ç–æ–±–æ–π –æ–±—â–∏–µ —Ç–µ–º—ã!")
    await state.set_state(InitProfileState.hobbies)


@router.message(InitProfileState.hobbies)
async def enter_hobbies(message: Message, state: FSMContext):
    await state.update_data(hobbies=message.text)
    await message.answer(
        "–§–æ—Ç–æ ‚Äì —ç—Ç–æ –ø–ª—é—Å –∫ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥—É!üòâ\n"
        "–î–∞–≤–∞–π –¥–æ–±–∞–≤–∏–º —Ç–≤–æ—ë —Ñ–æ—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª—å, —á—Ç–æ–±—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å—Ç–∞–ª–∏ —á—É—Ç—å –±–æ–ª–µ–µ –ª–∏—á–Ω—ã–º–∏. "
        "–ñ–¥—É —Å–Ω–∏–º–æ–∫!")
    await state.set_state(InitProfileState.photo)


@router.message(InitProfileState.photo, F.photo)
async def enter_photo(message: Message, state: FSMContext):
    if not message.photo:
        await message.answer("–§–æ—Ç–æ –Ω–µ –±—ã–ª–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        return

    photo_file_id = message.photo[-1].file_id

    await state.update_data(photo=photo_file_id)

    data = await state.get_data()

    kb = InlineKeyboardBuilder()

    kb.button(text="–î–∞, –∏–¥–µ–º –¥–∞–ª—å—à–µ", callback_data="confirm_profile")
    kb.button(text="–ù–µ—Ç, –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="restart_profile")

    department = data["department"]
    position = data["position"]
    location = data["location"]
    hobbies = data["hobbies"]

    await message.answer_photo(
        photo=photo_file_id,
        caption=f"{message.from_user.full_name}\n"
                f"@{message.from_user.username}\n\n"
                f"{department} - {position}\n"
                f"{location}\n\n"
                f"–û —Å–µ–±–µ: {hobbies}\n"
    )

    await message.answer(
        "–¢–µ–ø–µ—Ä—å —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫. "
        "–í—Å–µ –Ω—Ä–∞–≤–∏—Ç—Å—è? –ï—Å–ª–∏ –¥–∞ ‚Äì –¥–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ! "
        "–ï—Å–ª–∏ –Ω–µ—Ç ‚Äì –¥–∞–≤–∞–π –ø–æ–ø—Ä–∞–≤–∏–º.", reply_markup=kb.as_markup())

    await state.set_state(InitProfileState.confirm)


@router.callback_query(InitProfileState.confirm, F.data == "confirm_profile")
async def handle_confirm_profile(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()

    await create_or_update_user(
        telegram_id=callback.from_user.id,
        data={
            "username": callback.from_user.username,
            "full_name": callback.from_user.full_name,
            "location": data["location"],
            "department": data["department"],
            "position": data["position"],
            "hobbies": data["hobbies"],
            "photo_file_id": data["photo"],
            "is_active": True,
        }
    )

    await callback.message.answer(
        "–ì–æ—Ç–æ–≤–æ! ‚òï\n"
        "–¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –∂–¥–∞—Ç—å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ ‚Äì –∏–º–µ–Ω–Ω–æ —Ç–æ–≥–¥–∞ —è –Ω–∞–π–¥—É –¥–ª—è —Ç–µ–±—è –∫–ª–∞—Å—Å–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞. "
        "–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏!")
    await state.clear()


@router.callback_query(InitProfileState.confirm, F.data == "restart_profile")
async def restart_profile(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.answer(START_TEXT)
    await state.set_state(InitProfileState.location)
