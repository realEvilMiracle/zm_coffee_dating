from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardButton, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.state import State, StatesGroup
from db.crud import get_user_by_telegram_id, create_or_update_user

router = Router()


class EditProfileState(StatesGroup):
    location = State()
    department = State()
    position = State()
    hobbies = State()
    photo = State()


@router.callback_query(F.data == "edit_profile")
async def handle_edit_profile(ctx: CallbackQuery or Message):
    kb = InlineKeyboardBuilder()

    kb.row(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    kb.row(InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", callback_data="edit_location"))
    kb.row(InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–¥–µ–ª", callback_data="edit_department"))
    kb.row(InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å", callback_data="edit_position"))
    kb.row(InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã", callback_data="edit_hobbies"))
    kb.row(InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="edit_photo"))

    user = await get_user_by_telegram_id(telegram_id=ctx.from_user.id)

    if hasattr(ctx, "message"):
        ctx = ctx.message

    if not user:
        await ctx.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä - –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    await ctx.answer_photo(
        photo=user.photo_file_id,
        caption=f"{user.full_name}\n"
                f"@{user.username}\n\n"
                f"{user.department} - {user.position}\n"
                f"{user.location}\n\n"
                f"–û —Å–µ–±–µ: {user.hobbies}\n"
    )

    await ctx.answer("–í–æ—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. –ß—Ç–æ-—Ç–æ –º–µ–Ω—è–µ–º –∏–ª–∏ –≤—Å–µ –æ–∫?", reply_markup=kb.as_markup())


UPDATED_PROFILE_TEXT = "–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω! üîÑ\n–¢–µ–ø–µ—Ä—å –æ–Ω –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫"


@router.callback_query(F.data == "edit_location")
async def handle_edit_location(callback: CallbackQuery, state: FSMContext):
    await state.set_state(EditProfileState.location)
    await callback.message.answer(
        "–û–±–Ω–æ–≤–∏–º –≥–µ–æ–≥—Ä–∞—Ñ–∏—é! üìç\n"
        "–ù–∞–ø–∏—à–∏ —Å–≤–æ—é —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞—Ü–∏—é ‚Äì —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤.")


@router.message(EditProfileState.location)
async def save_location(message: Message, state: FSMContext):
    await create_or_update_user(message.from_user.id, {"location": message.text})
    await state.clear()
    await message.answer(UPDATED_PROFILE_TEXT)
    await handle_edit_profile(message)


@router.callback_query(F.data == "edit_department")
async def handle_edit_department(callback: CallbackQuery, state: FSMContext):
    await state.set_state(EditProfileState.department)
    await callback.message.answer("–í –∫–∞–∫–æ–º –æ—Ç–¥–µ–ª–µ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å?")


@router.message(EditProfileState.department)
async def save_department(message: Message, state: FSMContext):
    await create_or_update_user(message.from_user.id, {"department": message.text})
    await state.clear()
    await message.answer(UPDATED_PROFILE_TEXT)
    await handle_edit_profile(message)


@router.callback_query(F.data == "edit_position")
async def handle_edit_position(callback: CallbackQuery, state: FSMContext):
    await state.set_state(EditProfileState.position)
    await callback.message.answer("–ù–∞ –∫–∞–∫–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è?")


@router.message(EditProfileState.position)
async def save_position(message: Message, state: FSMContext):
    await create_or_update_user(message.from_user.id, {"position": message.text})
    await state.clear()
    await message.answer(UPDATED_PROFILE_TEXT)
    await handle_edit_profile(message)


@router.callback_query(F.data == "edit_hobbies")
async def handle_edit_hobbies(callback: CallbackQuery, state: FSMContext):
    await state.set_state(EditProfileState.hobbies)
    await callback.message.answer(
        "–î–æ–±–∞–≤–∏–º –Ω–µ–º–Ω–æ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç–∏! üöÄ\n"
        "–†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-—Ç–æ –Ω–æ–≤–µ–Ω—å–∫–æ–µ –æ —Å–≤–æ–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏—è—Ö ‚Äì —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –±–æ–ª–µ–µ –∂–∏–≤—ã–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º.")


@router.message(EditProfileState.hobbies)
async def save_hobbies(message: Message, state: FSMContext):
    await create_or_update_user(message.from_user.id, {"hobbies": message.text})
    await state.clear()
    await message.answer(UPDATED_PROFILE_TEXT)
    await handle_edit_profile(message)


@router.callback_query(F.data == "edit_photo")
async def handle_edit_photo(callback: CallbackQuery, state: FSMContext):
    await state.set_state(EditProfileState.photo)
    await callback.message.answer(
        "–î–∞–≤–∞–π –æ–±–Ω–æ–≤–∏–º —Ç–≤–æ–π –∞–≤–∞—Ç–∞—Ä! üì∏\n"
        "–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Ç–≤–æ—ë–º –ø—Ä–æ—Ñ–∏–ª–µ.")


@router.message(EditProfileState.photo, F.photo)
async def save_photo(message: Message, state: FSMContext):
    if not message.photo:
        await message.answer("–§–æ—Ç–æ –Ω–µ –±—ã–ª–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        return

    await create_or_update_user(message.from_user.id, {"photo_file_id": message.photo[-1].file_id})
    await state.clear()
    await message.answer(UPDATED_PROFILE_TEXT)
    await handle_edit_profile(message)
