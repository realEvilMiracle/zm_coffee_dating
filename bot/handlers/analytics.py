from aiogram import Router
from aiogram.types import Message, FSInputFile
import re
from datetime import datetime
from bot import ADMINS
from db.crud import get_feedback_stats  # —Ä–µ–∞–ª–∏–∑—É–µ–º –Ω–∏–∂–µ
from utils.excel_export import write_feedback_to_excel  # —Ä–µ–∞–ª–∏–∑—É–µ–º

router = Router()


@router.message(lambda msg: msg.text.startswith("/analytics"))
async def handle_analytics(message: Message):
    if message.from_user.id not in ADMINS:
        await message.answer("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")
        return

    match = re.match(r"/analytics (\d{2}-\d{2}-\d{4}) - (\d{2}-\d{2}-\d{4})", message.text)
    if not match:
        await message.answer("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /analytics –¥–¥-–º–º-–≥–≥–≥–≥ - –¥–¥-–º–º-–≥–≥–≥–≥")
        return

    date_from = datetime.strptime(match.group(1), "%d-%m-%Y").date()
    date_to = datetime.strptime(match.group(2), "%d-%m-%Y").date()

    data = await get_feedback_stats(date_from, date_to)
    path = await write_feedback_to_excel(data)

    await message.answer_document(FSInputFile(path), caption="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å—Ç—Ä–µ—á–∞–º")
