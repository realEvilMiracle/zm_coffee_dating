import random
from datetime import datetime, UTC
from itertools import zip_longest
from aiogram import Bot
from db.crud import get_active_users, create_or_update_user
from db.session import get_session

IF_NOT_FOUND_MESSAGE = ("–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è - –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –í–∞–º –ø–∞—Ä—Ç–Ω–µ—Ä–∞."
                        "–ù–æ –Ω–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å - –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –í–∞–º –Ω–∞–π–¥–µ–º!")


async def run_matching(bot: Bot):
    async for session in get_session():
        users = await get_active_users(session)
        random.shuffle(users)

        pairs = list(zip_longest(users[::2], users[1::2]))

        for user1, user2 in pairs:

            if not user1:
                await bot.send_message(
                    user2.telegram_id,
                    IF_NOT_FOUND_MESSAGE,
                )

                await create_or_update_user(user2.telegram_id, {"last_matched_with": None})

                continue

            if not user2:
                await bot.send_message(
                    user1.telegram_id,
                    IF_NOT_FOUND_MESSAGE,
                )

                await create_or_update_user(user1.telegram_id, {"last_matched_with": None})

                continue

            for sender, partner in [(user1, user2), (user2, user1)]:
                try:
                    await bot.send_message(
                        sender.telegram_id,
                        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ ‚Äì –∑–Ω–∞—á–∏—Ç, –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞! üöÄ\n"
                        f"–¢–≤–æ—è –ø–∞—Ä–∞ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é ‚Äì {partner.full_name} @{partner.username}.\n"
                        f"üó£Ô∏è –¢–µ–º–∞ –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: {partner.hobbies}\n"
                        "–ó–Ω–∞–µ—à—å, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –ª—é–¥–µ–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏? "
                        "–ò—Ö –∏—Å—Ç–æ—Ä–∏–∏, –∏–¥–µ–∏ –∏ —Ç–æ, –∫–∞–∫ –æ–Ω–∏ —Å–º–æ—Ç—Ä—è—Ç –Ω–∞ –º–∏—Ä. "
                        "–¢–∞–∫ —á—Ç–æ –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è ‚Äì –æ–±—Å—É–¥–∏—Ç–µ –≤—Å—ë, —á—Ç–æ –≤–∞—Å —É–≤–ª–µ–∫–∞–µ—Ç. "
                        "–ú–æ–∂–µ—Ç, —É –≤–∞—Å –ø–æ—Ö–æ–∂–∏–µ —Ö–æ–±–±–∏, –∞ –º–æ–∂–µ—Ç, —Å–æ–≤—Å–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∑–≥–ª—è–¥—ã ‚Äì "
                        "–≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ —ç—Ç–æ —à–∞–Ω—Å —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ! üòâ"
                    )

                    await bot.send_photo(
                        sender.telegram_id,
                        partner.photo_file_id,
                        caption=f"{partner.full_name}\n"
                                f"@{partner.username}\n\n"
                                f"{partner.department} - {partner.position}\n"
                                f"{partner.location}\n\n"
                                f"–û —Å–µ–±–µ: {partner.hobbies}\n"
                    )

                    sender.last_matched_with = partner.telegram_id
                    sender.last_matched_at = datetime.now(UTC)

                    await bot.send_message(
                        sender.telegram_id,
                        "–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π –Ω–∞ –ø–æ—Ç–æ–º! üöÄ\n"
                        "–î–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å. "
                        "–ù–µ —É–ø—É—Å–∫–∞–π —à–∞–Ω—Å —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ!"
                    )
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º—ç—Ç—á–∞: {e}")
        await session.commit()
